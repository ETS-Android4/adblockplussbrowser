stages:
  - build
  - sign_builds

image: gradle:jdk8
build:
  stage: build
  variables:
    GRADLE_OPTS: "-Dorg.gradle.daemon=false"
    ANDROID_SDK_TOOLS: "4333796"

  before_script:
    - export GRADLE_USER_HOME=`pwd`/.gradle
    - apt-get --quiet update --yes
    - apt-get --quiet install --yes wget tar unzip lib32stdc++6 lib32z1
    - wget --quiet --output-document=android-sdk.zip https://dl.google.com/android/repository/sdk-tools-linux-${ANDROID_SDK_TOOLS}.zip
    - unzip -q -d android-sdk-linux android-sdk.zip && rm android-sdk.zip
    - export ANDROID_HOME=$PWD/android-sdk-linux
    # temporarily disable checking for EPIPE error and use yes to accept all licenses
    - set +o pipefail
    - yes | android-sdk-linux/tools/bin/sdkmanager --licenses >/dev/null
    - set -o pipefail
  script: 
    - ./gradlew --build-cache assembleWorldAbpRelease
  artifacts:
    paths:
      - "app/build/outputs/apk/worldAbp/release/app-world-abp-release-unsigned.apk"


sign_apks:
  stage: "sign_builds"
  variables:
    GIT_STRATEGY: none
  tags:
    - "apk_signer_apk-signing-1.uplink.eyeo.it"
  before_script:
    - "rm -fr ./*_SIGNED.apk"
  script:
    - |
      for UNSIGNED_FILE in $(find app/build/outputs/apk -name "*.apk")
        do
        SIGNED_FILE=$(basename "${UNSIGNED_FILE/.apk/_SIGNED.apk}")
        echo "Signing ${UNSIGNED_FILE} to ${SIGNED_FILE}"
        /usr/local/bin/apk_signer < $UNSIGNED_FILE > $SIGNED_FILE
      done
    - ls -1 ./*_SIGNED.apk
  after_script:
    - rm -fr artifact-archiver/
    - git clone https://gitlab.com/eyeo/distpartners/artifact-archiver.git && artifact-archiver/bootstrap.sh
    # Delete everything for the next job, the runner isnt in a container
    - rm -fr *
  artifacts:
    paths:
      - "./*_SIGNED.apk"
    expire_in: "1 week"

