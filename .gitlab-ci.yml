stages:
  - build

image: gradle:jdk8

variables:
  APK_OUTPUT_PATH: "app/build/outputs/apk"
  MAPPING_OUTPUT_PATH: "app/build/outputs/mapping"

# we would need a template for other type of builds
.template_build:
  stage: build
  variables:
    GRADLE_OPTS: "-Dorg.gradle.daemon=false"
    ANDROID_SDK_TOOLS: "4333796"
  before_script:
    - export GRADLE_USER_HOME=`pwd`/.gradle
    - apt-get --quiet update --yes
    - apt-get --quiet install --yes wget tar unzip lib32stdc++6 lib32z1
    - wget --quiet --output-document=android-sdk.zip https://dl.google.com/android/repository/sdk-tools-linux-${ANDROID_SDK_TOOLS}.zip
    - unzip -q -d android-sdk-linux android-sdk.zip && rm android-sdk.zip
    - export ANDROID_HOME=$PWD/android-sdk-linux
    # temporarily disable checking for EPIPE error and use yes to accept all licenses
    - set +o pipefail
    - yes | android-sdk-linux/tools/bin/sdkmanager --licenses >/dev/null
    - set -o pipefail
    - mkdir -p "app/src/worldAbp/debug"
    - cat "$GOOGLE_SERVICES_ABP_DEBUG" > "$(pwd)/app/src/worldAbp/debug/google-services.json"
    - mkdir "app/src/worldAbp/release"
    - cat "$GOOGLE_SERVICES_ABP_RELEASE" > "$(pwd)/app/src/worldAbp/release/google-services.json"
    - mkdir -p "app/src/worldAdblock/debug"
    - cat "$GOOGLE_SERVICES_ADBLOCK_DEBUG" > "$(pwd)/app/src/worldAdblock/debug/google-services.json"
    - mkdir "app/src/worldAdblock/release"
    - cat "$GOOGLE_SERVICES_ADBLOCK_RELEASE" > "$(pwd)/app/src/worldAdblock/release/google-services.json"
    - mkdir -p "app/src/worldCrystal/debug"
    - cat "$GOOGLE_SERVICES_CRYSTAL_DEBUG" > "$(pwd)/app/src/worldCrystal/debug/google-services.json"
    - mkdir "app/src/worldCrystal/release"
    - cat "$GOOGLE_SERVICES_CRYSTAL_RELEASE" > "$(pwd)/app/src/worldCrystal/release/google-services.json"

build:
  extends: .template_build
  cache:
    key: debug-keystore
    paths:
      - $HOME/.android
  script:
    - find $HOME/.android
    - cp $HOME/.android/debug.keystore .
  artifacts:
    paths:
      # saving all flavors with apks and `output-metadata.json`
      - debug.keystore
  rules:
    - when: always
